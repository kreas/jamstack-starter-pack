main.svelte-zp1dug{position:relative;max-width:56em;background-color:white;padding:2em;margin:0 auto;box-sizing:border-box}
h1.svelte-iy9kc2,p.svelte-iy9kc2{margin:0 auto}h1.svelte-iy9kc2{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-iy9kc2{margin:1em auto}@media(min-width: 480px){h1.svelte-iy9kc2{font-size:4em}}
ul.svelte-hfcvru{margin:0 0 1em 0;line-height:1.5}
.content.svelte-1snaucg h2{font-size:1.4em;font-weight:500}.content.svelte-1snaucg pre{background-color:#f9f9f9;box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-1snaucg pre code{background-color:transparent;padding:0}.content.svelte-1snaucg ul{line-height:1.5}.content.svelte-1snaucg li{margin:0 0 0.5em 0}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */